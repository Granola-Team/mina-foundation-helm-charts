# Default values for on-chain-voting.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

web:
  replicaCount: 1

  image:
    repository: 673156464838.dkr.ecr.us-west-2.amazonaws.com/on-chain-voting
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "web-0.1.0-ff43708"

    imagePullSecrets: []


  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts: []
      # - host: chart-example.local
      #   paths:
      #     - path: /
      #       pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  apiBaseURL: ""
  nextPublicApiBaseURL: ""
  releaseStage: production
  nextPublicReleaseStage: production

  extraEnvVars: {}
    # - name: FOO
    #   value: FOO
    # - name: BAR
    #   valueFrom:
    #     secretKeyRef:
    #       name: mySecret
    #       key: bar

  nodeSelector: {}

  tolerations: []

  affinity: {}

server:
  replicaCount: 1

  image:
    repository: 673156464838.dkr.ecr.us-west-2.amazonaws.com/on-chain-voting
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "server-0.1.0-ff43708"

    imagePullSecrets: []

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8080

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  minaNetwork: berkeley
  postgresConnectionString: ""
  archivePostgresConnectionString: postgres://mina@postgres:5432/archive
  allowedOrigins: '*'

  extraEnvVars: {}
    # - name: FOO
    #   value: FOO
    # - name: BAR
    #   valueFrom:
    #     secretKeyRef:
    #       name: mySecret
    #       key: bar

  nodeSelector: {}

  tolerations: []

  affinity: {}

postgresql:
  create: true
  global:
    storageClass: ebs-gp3-encrypted
  primary:
    name: "on-chain-voting"
    persistence:
      enabled: false
      size: 1Gi
    initdb:
      user: "mina"
      password: "ZhSYoKNUoyZPBftuNYiA6WqkG7Gpak"
  auth:
    username: "mina"
    password: "ZhSYoKNUoyZPBftuNYiA6WqkG7Gpak"
    database: "on-chain-voting"
    enablePostgresUser: false
