# Default values for delegation-program-payouts.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 673156464838.dkr.ecr.us-west-2.amazonaws.com/delegation-program-payouts
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0.0-37d157a"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8082

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

payouts:
  appName: "MINA Delegation Program Payouts API"
  appEnv: demo
  appKey: base64:AcjvbbjQqjm5l/6ynqNYCatc7Xuwd34ZjfS64S/lNYw=
  appDebug: false
  appUrl: http://localhost

  minaGraphqlEndpoint: "https://graphql.minaexplorer.com/"
  burnWalletAddress: "B62qiburnzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzmp7r7UN6X"
  advancedPayoutDebug: false
  defaultCommissionRate: 0.05

  logChannel: single
  logDeprecationsChannel:
  logLevel: info

  payoutsDbConnection: pgsql
  payoutsDbHost: 127.0.0.1
  payoutsDbPort: 5432
  payoutsDbDatabase: delegation_program_payouts
  payoutsDbUsername: postgres
  payoutsDbPassword:

  archiveDbConnection: archive-db
  archiveDbHost: mainnet-archive-temp.minaprotocol.network
  archiveDbPort: 5432
  archiveDbDatabase: archive_balances_migrated
  archiveDbUsername: postgres
  archiveDbPassword:

postgresql:
  create: false
  global:
    storageClass: ebs-gp3-encrypted
  primary:
    name: "dp-api"
    persistence:
      enabled: false
      size: 1Gi
    initdb:
      user: "mina"
      password: "3xJjsUZi7X3dr3YHxFgqCj8mZBtHWt"
  auth:
    username: "mina"
    password: "3xJjsUZi7X3dr3YHxFgqCj8mZBtHWt"
    database: "dp-api"
    enablePostgresUser: false
