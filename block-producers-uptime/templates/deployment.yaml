---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Release.Name }}
      {{- if .Values.deployment.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" ( dict "type" .Values.deployment.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" ( dict "type" .Values.deployment.podAntiAffinityPreset "context" $) | nindent 10 }}
      {{- end }}
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 30
          resources:
            requests:
              memory: {{ default "256Mi" .Values.resources.memoryRequest }}
              cpu: {{ default "500m" .Values.resources.cpuRequest }}
            limits:
              memory: {{ default "512Mi" .Values.resources.memoryLimit }} 
              cpu: {{ default "1" .Values.resources.cpuLimit }}
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            {{- if .Values.deployment.secrets.credentialFile.path }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: {{ .Values.deployment.secrets.credentialFile.path }}
            {{- end }}
            {{- with .Values.deployment.awsConfig }}
            - name: CONFIG_NETWORK_NAME
              value: {{ .network | quote }}
            - name: CONFIG_AWS_REGION
              value: {{ .region | quote }}
            - name: CONFIG_AWS_ACCOUNT_ID
              value: {{ .accountId | quote }}
            {{- end }}
            {{- with .Values.deployment.analyzerScriptConfig }}
            - name: CONFIG_ANALYZER_OUTPUT_GSHEET_ID
              value: {{ .outputSheetId | quote }}
            - name: CONFIG_STDOUT
              value: {{ .stdout | quote }}
            - name: CONFIG_LOCAL_OUTPUT
              value: {{ .localOutput | quote }}
            - name: CONFIG_S3_BUCKET
              value: {{ .s3bucket | quote }}
            - name: CONFIG_S3_KEY
              value: {{ .s3key | quote }}
            {{- if .periodStart }}
            - name: CONFIG_PERIOD_START
              value: {{ .periodStart | quote }}
            {{- end }}
            {{- if .periodEnd }}
            - name: CONFIG_PERIOD_END
              value: {{ .periodEnd | quote }}
            {{- end }}
            {{- if .periodInterval }}
            - name: CONFIG_PERIOD_INTERVAL
              value: {{ .periodInterval | quote }}
            {{- end }}
            - name: CONFIG_IGNORE_IPS
              value: {{ .ignoreIps | quote }}
            {{- end }}
            {{- with .Values.deployment.whitelistConfig }}
            - name: CONFIG_GSHEET_ID
              value: {{ .sheetId | quote }}
            - name: DELEGATION_WHITELIST_LIST
              value: {{ .list | quote }}
            - name: DELEGATION_WHITELIST_COLUMN
              value: {{ .column | quote }}
            {{- end }}
            {{- if .Values.deployment.gcpStaging.enabled }}
            - name: TEST
              value: {{ .Values.deployment.gcpStaging.enabled | quote }}
            {{- end }}
            {{- if .Values.deployment.network.name }}
            - name: NETWORK
              value: {{ .Values.deployment.network.name | quote }}
            {{- end }}
          volumeMounts:
            {{- with .Values.deployment.secrets.credentialFile }}
            - name:  {{ .releaseName }}-credential-file
              mountPath: {{ .dir | quote }}
            {{- end }}
      volumes:
        {{- with .Values.deployment.secrets.credentialFile }}
        - name: {{ .releaseName }}-credential-file
          secret:
            secretName: {{ .releaseName }}
            defaultMode: 0600
            items:
              - key: {{ .name }}
                path: {{ .name }}.json
        {{- end }}
